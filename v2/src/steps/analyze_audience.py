# src/steps/analyze_audience.py
from src.steps.base_step import ConversationStep
from src.state import AgentState
from src.services.llm_service import LanguageModelService
from src.services.search_service import SearchService

class AnalyzeAudienceStep(ConversationStep):
    """Analyzes the audience and asks for confirmation."""
    def execute(self, state: AgentState, llm_service: LanguageModelService, search_service: SearchService) -> tuple[AgentState, str]:
        state["current_step_name"] = "analyze_audience"
        # This step might be entered after clarifying goal, so save that last message.
        state["speaker_info"]["goal_metrics"] = state["messages"][-1].content
        
        print("\nüîç –ê–Ω–∞–ª—ñ–∑—É—é –∞—É–¥–∏—Ç–æ—Ä—ñ—é...")

        event_name = state["event_info"].get("event_name", "")
        topic = state["speaker_info"].get("topic", "")
        search_results = search_service.run(f"{event_name} {topic} audience demographics attendees")

        analysis_prompt = f"""
        –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –∞—É–¥–∏—Ç–æ—Ä—ñ—é –¥–ª—è –≤–∏—Å—Ç—É–ø—É –Ω–∞ —Ç–µ–º—É "{topic}" –Ω–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü—ñ—ó "{event_name}".
        –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑ –ø–æ—à—É–∫—É: {search_results}
        –í–∏–∑–Ω–∞—á –æ—Å–Ω–æ–≤–Ω—ñ —Å–µ–≥–º–µ–Ω—Ç–∏ –∞—É–¥–∏—Ç–æ—Ä—ñ—ó, —ó—Ö–Ω—ñ –º–æ–∂–ª–∏–≤—ñ —ñ–Ω—Ç–µ—Ä–µ—Å–∏ —Ç–∞ —Ä—ñ–≤–µ–Ω—å –∑–Ω–∞–Ω—å.
        –í—ñ–¥–ø–æ–≤—ñ–¥—å –¥–∞–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é —É –≤–∏–≥–ª—è–¥—ñ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ, —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–æ–≥–æ –∞–Ω–∞–ª—ñ–∑—É.
        """
        analysis_content = llm_service.invoke(analysis_prompt)
        state["audience_analysis"] = {"content": analysis_content}

        # Prepare for feedback loop
        state["audience_approved"] = False
        state["audience_modification_count"] = 0
        
        confirmation_message = f"""
–û—Å—å –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –∞–Ω–∞–ª—ñ–∑ —Ç–≤–æ—î—ó –∞—É–¥–∏—Ç–æ—Ä—ñ—ó:

{analysis_content}

–ß–∏ –≤—Å–µ –≤—ñ—Ä–Ω–æ, —á–∏ —Ö–æ—á–µ—à —â–æ—Å—å –¥–æ–¥–∞—Ç–∏ –∞–±–æ –∑–º—ñ–Ω–∏—Ç–∏? (—Ç–∞–∫/–¥–æ–¥–∞—Ç–∏/–∑–º—ñ–Ω–∏—Ç–∏)
        """
        return state, confirmation_message.strip()
# src/steps/assess_knowledge.py
from src.services.llm_service import LanguageModelService
from src.services.search_service import SearchService
from src.state import AgentState
from src.steps.base_step import ConversationStep

class AssessKnowledgeStep(ConversationStep):
    """Assesses audience knowledge and asks for confirmation."""
    def execute(self, state: AgentState, llm_service: LanguageModelService, search_service: SearchService) -> tuple[AgentState, str]:
        state["current_step_name"] = "assess_knowledge"
        print("\nüß† –û—Ü—ñ–Ω—é—é –∑–Ω–∞–Ω–Ω—è –∞—É–¥–∏—Ç–æ—Ä—ñ—ó...")
        
        topic = state["speaker_info"].get("topic")
        audience_analysis = state["audience_analysis"].get("content")

        assessment_prompt = f"""
        –ë–∞–∑—É—é—á–∏—Å—å –Ω–∞ —Ç–µ–º—ñ "{topic}" —Ç–∞ –∞–Ω–∞–ª—ñ–∑—ñ –∞—É–¥–∏—Ç–æ—Ä—ñ—ó: '{audience_analysis}',
        –æ–ø–∏—à–∏, —â–æ —Ü—è –∞—É–¥–∏—Ç–æ—Ä—ñ—è –π–º–æ–≤—ñ—Ä–Ω–æ –≤–∂–µ –∑–∞—Ä–∞–∑ –∑–Ω–∞—î –ø—Ä–æ —Ü—é —Ç–µ–º—É, –∞ —â–æ —ó–π —Ç—Ä–µ–±–∞ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –¥–ª—è –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è –º–µ—Ç–∏ —Å–ø—ñ–∫–µ—Ä–∞.
        –í—ñ–¥–ø–æ–≤—ñ–¥—å —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é, –¥–µ—Ç–∞–ª—å–Ω–æ —Ç–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–æ.
        """
        assessment_content = llm_service.invoke(assessment_prompt)
        state["knowledge_assessment"] = {"content": assessment_content}
        state["knowledge_approved"] = False
        state["knowledge_modification_count"] = 0

        return state, f"–û—Å—å –æ—Ü—ñ–Ω–∫–∞ –∑–Ω–∞–Ω—å –∞—É–¥–∏—Ç–æ—Ä—ñ—ó:\n\n{assessment_content}\n\n–¢–∏ –∑–≥–æ–¥–µ–Ω –∑ —Ü–∏–º?"